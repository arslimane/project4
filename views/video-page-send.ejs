<%-include("header.ejs") %>

   <div class="video-block section-padding">
      <div class="row">
         <div class="col-lg-12">
            <div class="single-video-left">
               <div class="single-video">
                  <video muted id="video-send" width="1000" height="500" src="" frameborder="0"
                     allow="autoplay; encrypted-media" allowfullscreen></video>
               </div>

               <div class="single-video-author box mb-3">
                  <div class="float-right"><button id="streamc" class="btn btn-success" type="button">Stream cam
                     </button> <button id="streamf" class="btn btn-info" type="button">Stream Screen </button></div>
                  <img id="image" class="img-fluid" src="img/s4.png" alt="">
                  <p><a href="#"><strong id="title"></strong></a> <span title="" data-placement="top"
                        data-toggle="tooltip" data-original-title="Verified"><i
                           class="fas fa-check-circle text-success"></i></span></p>
                  <small id="date"></small>
                  <br>
                  <i>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</i><small
                     id="sub"></small>
               </div>
               <div class="single-video-info-content box mb-3">
                  <h6>Streamer:</h6>
                  <p id="cast"></p>
                  <h6>Category :</h6>
                  <p id="category"></p>
                  <h6>About :</h6>
                  <p id="about"> </p>
                  <h6>Tags :</h6>
                  <p id="tag" class="tags mb-0">


                  </p>
               </div>
            </div>
         </div>
      </div>
   </div>
   </div>

   <script defer src="https://unpkg.com/peerjs@1.3.2/dist/peerjs.min.js"></script>

   <script src="send.js" defer>
      var streamerid = "<%- idc %>"

   </script>
   <script type="module">
      var streamerid = "<%- idc %>";
      var channelname = "<%- name %>";




      // Import the functions you need from the SDKs you need
      import { initializeApp } from "https://www.gstatic.com/firebasejs/9.8.1/firebase-app.js";
      import { getAnalytics } from "https://www.gstatic.com/firebasejs/9.8.1/firebase-analytics.js";
      // TODO: Add SDKs for Firebase products that you want to use
      // https://firebase.google.com/docs/web/setup#available-libraries

      // Your web app's Firebase configuration
      // For Firebase JS SDK v7.20.0 and later, measurementId is optional
      const firebaseConfig = {
         apiKey: "AIzaSyB92ojoKUrMWJZO2xvi9GmN3lPKtuoLANM",
         authDomain: "ezlive-3de45.firebaseapp.com",
         databaseURL: "https://ezlive-3de45-default-rtdb.firebaseio.com",
         projectId: "ezlive-3de45",
         storageBucket: "ezlive-3de45.appspot.com",
         messagingSenderId: "307117333023",
         appId: "1:307117333023:web:0926177e6fe7e03f8bd32a",
         measurementId: "G-L3YF1HP60C"
      };

      // Initialize Firebase
      const app = initializeApp(firebaseConfig);
      var access;
      const analytics = getAnalytics(app);
      import { getDatabase, ref, get, set, child, update, remove, push } from "https://www.gstatic.com/firebasejs/9.8.1/firebase-database.js";
      const db = getDatabase();
      const dbref = ref(db);
      var key = "";
      var title = document.getElementById("title");
      var about = document.getElementById("about");
      var image = document.getElementById("image");
      var d = document.getElementById("date");
      var nbs = document.getElementById("sub");
      var cast = document.getElementById("cast");
      var category = document.getElementById("category");
      var tags = document.getElementById("tag");
      function makeid() {
         var text = "";
         var possible = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";

         for (var j = 0; j < 28; j++)
            text += possible.charAt(Math.floor(Math.random() * possible.length));

         return text;
      }
      access = makeid();
      var salt = CryptoJS.lib.WordArray.random(128 / 8);

      var k = CryptoJS.PBKDF2("Secret Passphrase", salt, {
         keySize: 256 / 32
      });
      var keyc = CryptoJS.AES.encrypt(access, k.toString());
      sendv(access);

      get(child(dbref, "channels")).then((res) => {
         if (res.val() != null) {
            var ch = res.val();
            for (var h = 0; h < Object.values(ch).length; h++) {
               if (Object.values(ch)[h]["userid"] == streamerid && Object.values(ch)[h]["channel-name"] == channelname) {
                  key = Object.keys(ch)[h];
                  title.innerText = Object.values(ch)[h]["channel-name"];
                  about.innerText = Object.values(ch)[h]["about"];
                  image.setAttribute("src", Object.values(ch)[h]["imageurl"]);
                  category.innerText = Object.values(ch)[h]["categories"]
                  d.innerText = 'Published on ' + Object.values(ch)[h]["date"];
                  var type = "";
                  var sub = Object.values(ch)[h]["sub"]
                  if (sub >= 1000000) { sub = sub / 1000000; type = "M" } else {
                     if (sub >= 1000) { sub = sub / 1000; type = "K" }
                  }

                  nbs.innerText = sub + type + " subscribers";
                  cast.innerText = Object.values(ch)[h]["cast"];
                  about.innerText = Object.values(ch)[h]["about"];
                  var t = Object.values(ch)[h]["tags"];
                  var t2 = t.split(",");
                  for (var j = 0; j < t2.length; j++) {
                     tags.innerHTML = tags.innerHTML + "<span><a href='#'>" + t2[j] + "</a></span>&nbsp;";

                  }
                  var dbref2 = ref(db, "channels/" + Object.keys(ch)[h]);
                    update(dbref2, { key: k.toString() }).then(() => console.log("keyup"));
                    update(dbref2, { access: keyc.toString() }).then(() => console.log("accessup"));

               }
            }
         }
      })




      

      var v = document.getElementById("video-send");
      v.addEventListener("play", () => {
         if (v.srcObject == null) {

            var dbref2 = ref(db, "channels/" + key);

            update(dbref2, { state: false }).then(() => {
               console.log("updated")
            });

         } else {
            var dbref2 = ref(db, "channels/" + key);
            update(dbref2, { state: true }).then(() => {
               console.log("updated")
            });
            get(child(dbref, "channels")).then((snapshot) => {
               if (snapshot != null) {
                  var channel = snapshot.val();
                  for (var i = 0; i < Object.values(channel).length; i++) {
                     if (Object.values(channel)[i]["userid"] == streamerid && Object.values(channel)[i]["channel-name"] == channelname) {
                        var v = Object.values(channel)[i]["totalviews"] + Object.values(channel)[i]["viewsnow"];
                        console.log(v);
                        update(dbref2, { totalviews: v }).then(() => {
                           console.log("updated")
                        });
                     }
                  }
               }
            }
            )
            update(dbref2, { viewsnow: 0 }).then(() => { });


         }
      })

      v.addEventListener("emptied", () => {
         var dbref2 = ref(db, "channels/" + key);
         update(dbref2, { state: false });
         get(child(dbref, "channels")).then((snapshot) => {
            if (snapshot != null) {
               var channel = snapshot.val();
               for (var i = 0; i < Object.values(channel).length; i++) {
                  if (Object.values(channel)[i]["userid"] == streamerid && Object.values(channel)[i]["channel-name"] == channelname) {
                     var v = Object.values(channel)[i]["totalviews"] + Object.values(channel)[i]["viewsnow"];
                     console.log(v);
                     update(dbref2, { totalviews: v }).then(() => {
                        console.log("updated")
                     });
                  }
               }
            }
         }
         )
         update(dbref2, { viewsnow: 0 }).then(() => { });


      })

   </script>



   <%- include("footer.ejs") %>

      </html>