<%-include("header.ejs") %>
        
               <div class="video-block section-padding">
                  <div class="row">
                     <div class="col-lg-12">
                        <div class="single-video-left">
                           <div class="single-video">
                              <video  id="video-recived" width="1000" height="500" src="" frameborder="0" allow="autoplay; encrypted-media" allowfullscreen autoplay></video>
                           </div>
                          
                           <div class="single-video-author box mb-3">
                              <div class="float-right"><button class="btn btn-danger" id="Subscribe" value="Subscribe" type="button">Subscribe</button></div>
                           
                              <img id="image" class="img-fluid" src="" alt="">
                              <p><a href="#"><strong id="title"></strong></a> <span title="" data-placement="top" data-toggle="tooltip" data-original-title="Verified"><i class="fas fa-check-circle text-success"></i></span></p>
                              <small id="date" ></small>
                              <br>
                              <i>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</i><small id="sub" ></small>
                           </div>
                           <div class="single-video-info-content box mb-3">
                              <h6>Streamer:</h6>
                              <p id="cast"></p>
                              <h6>Category :</h6>
                              <p id="category"></p>
                              <h6>About :</h6>
                              <p id="about"> </p>
                              <h6>Tags :</h6>
                              <p id="tag" class="tags mb-0">
                                
                              
                              </p>
                           </div>
                        </div>
                     </div>
                  </div>
               </div>
            </div>
               <script src="https://unpkg.com/peerjs@1.3.2/dist/peerjs.min.js" defer ></script>
              
               <script src="receive.js" defer>
                  var streamerid="<%- id %>";
                 
                 
               </script>
               
             
            
             
               <script type="module">
                  var streamerid="<%- id %>"
                  var clientid="<%- idc %>"
                  var channel_name="<%- name %>";
               
                
            
                  // Import the functions you need from the SDKs you need
             import { initializeApp } from "https://www.gstatic.com/firebasejs/9.8.1/firebase-app.js";
             import { getAnalytics } from "https://www.gstatic.com/firebasejs/9.8.1/firebase-analytics.js";
             // TODO: Add SDKs for Firebase products that you want to use
             // https://firebase.google.com/docs/web/setup#available-libraries
           
             // Your web app's Firebase configuration
             // For Firebase JS SDK v7.20.0 and later, measurementId is optional
             const firebaseConfig = {
               apiKey: "AIzaSyB92ojoKUrMWJZO2xvi9GmN3lPKtuoLANM",
               authDomain: "ezlive-3de45.firebaseapp.com",
               databaseURL: "https://ezlive-3de45-default-rtdb.firebaseio.com",
               projectId: "ezlive-3de45",
               storageBucket: "ezlive-3de45.appspot.com",
               messagingSenderId: "307117333023",
               appId: "1:307117333023:web:0926177e6fe7e03f8bd32a",
               measurementId: "G-L3YF1HP60C"
             };
           
             // Initialize Firebase
             const app = initializeApp(firebaseConfig);
             const analytics = getAnalytics(app);
             import{getDatabase,ref,get,set,child,update,remove,push} from "https://www.gstatic.com/firebasejs/9.8.1/firebase-database.js";
             const db=getDatabase();
             const dbref=ref(db);
             var key;
             var nbss=0;
             var listsub;
             var sbb=document.getElementById("Subscribe");
             var tags=document.getElementById("tag");
             var title=document.getElementById("title");
             var image=document.getElementById("image");
             var about=document.getElementById("about");
             var nbs=document.getElementById("sub");
             var cast=document.getElementById("cast");
             var category=document.getElementById("category");

             sbb.addEventListener("click",()=>{
               get(child(dbref, "channels")). then((snapshot)=>{
                     if(snapshot!=null){
                           var channel=snapshot.val();
                           for(var i=0;i<Object.values(channel).length;i++){
                             if((Object.values(channel)[i]["userid"]==streamerid) &&(Object.values(channel)[i]["channel-name"]==channel_name)){
                                 key=Object.keys(channel)[i];
                                 nbss=Object.values(channel)[i]["sub"]
                                 listsub=Object.values(channel)[i]["listsub"]
                              }
                           }
                              if(sbb.getAttribute("value")=="Subscribe"){
                               listsub.push(clientid);
                               var dbref2=ref(db,"channels/"+key);
                                update(dbref2,{sub:nbss+1}).then(()=>{
                               console.log("updated")});;
                               update(dbref2,{listsub:listsub}).then(()=>{
                                console.log("updated")});;
                               sbb.innerHTML="Unsubscribe";
                               sbb.setAttribute("value","Unsubscribe");
                               console.log(nbss);
                           
                             var o=nbss+1;
                             var type="";
                              if(o>=1000000){o=o /1000000;type="M"}else{
                                 if(o>=1000){o=o /1000;type="K"}
                              }
                              console.log(type);
                              var nbs=document.getElementById("sub");
                               nbs.innerText=o+type+" subscribers";
                
                       }else{
                              var dbref2=ref(db,"channels/"+key);
                              update(dbref2,{sub:nbss-1}).then(()=>{});
                              
                              var type="";
                              var o=nbss-1;
                          
                              if(o>=1000000){o=o /1000000;type="M"}else{
                                 if(o>=1000){o=o /1000;type="K"}
                              }
                              var nbs=document.getElementById("sub");
                               nbs.innerText=o+type+" subscribers";
                             
                              sbb.innerText="Subscribe ";
                              sbb.setAttribute("value","Subscribe");
                              listsub.pop(clientid);
                              update(dbref2,{listsub:listsub}).then(()=>{
                              console.log("updated")});;

                                }
                        }
              
                        
                    }
                  )
              
             });
         
             
             get(child(dbref, "channels")). then((snapshot)=>{
                if(snapshot!=null){
                   var ch=snapshot.val();
                  
                   for(var h=0;h<Object.values(ch).length;h++){
                      if((Object.values(ch)[h]["userid"]==streamerid) &&(Object.values(ch)[h]["channel-name"]==channel_name)){
                        var accesscrypted =Object.values(ch)[h]["access"]
                          var access=accesscrypted;
                          if(Object.values(ch)[h]["listsub"].includes(clientid)){
                          
                           var dbref2 = ref(db, "channels/" + Object.keys(ch)[h]);
                           var v=Object.values(ch)[h]["viewsnow"];
                     
                           v++;
                           update(dbref2, { viewsnow: v }).then(() => { });
                       
                           var k=Object.values(ch)[h]["key"];
                                access=CryptoJS.AES.decrypt(accesscrypted,k.toString()).toString(CryptoJS.enc.Utf8);
                                startv(access);
                          }
                          
                         
                       
                         
                         title.innerText=Object.values(ch)[h]["channel-name"];
                         image.setAttribute("src",Object.values(ch)[h]["imageurl"]);
                         var d=document.getElementById("date");
                         d.innerText='Published on '+Object.values(ch)[h]["date"];
                         var type="";
                              var sub=Object.values(ch)[h]["sub"]
                              if(sub>=1000000){sub=sub /1000000;type="M"}else{
                                 if(sub>=1000){sub=sub /1000;type="K"}
                              }
                       
                        nbs.innerText=sub+type+" subscribers";
                        if(Object.values(ch)[h]["listsub"].includes(clientid)){
                           var sbb=document.getElementById("Subscribe");
                           sbb.innerHTML="Unsubscribe";
                            sbb.setAttribute("value","Unsubscribe");
                        }
   
                         var cast=document.getElementById("cast");
                         cast.innerText=Object.values(ch)[h]["cast"];
   
                        
                         category.innerText=Object.values(ch)[h]["categories"];
                     
                         
                         about.innerText=Object.values(ch)[h]["about"];
   
                        
                        var t=Object.values(ch)[h]["tags"];
                        var t2=t.split(",");
                        for(var i=0;i<t2.length;i++){
                          tags.innerHTML=tags.innerHTML+"<span><a href='#'>"+t2[i]+"</a></span>&nbsp;";
   
                        }
   
                       
                     
                     
                     
   
                      }
                   }
   
                }
               })
   
             
   
   
               </script>

            
            
            

            
           <%- include("footer.ejs") %>
</html>